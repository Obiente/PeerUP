---
import Card from './Card.astro';
import CardBody from './CardBody.astro';
import Heading from './Heading.astro';
import Badge from './Badge.astro';
import Button from './Button.astro';
import Grid from './Grid.astro';

interface Props {
	title: string;
	slug: string;
	isActive: boolean;
	services: string[];
	uptime: number;
	visits: number;
	lastIncident: string;
	created: string;
}

const { title, slug, isActive, services, uptime, visits, lastIncident, created } = Astro.props;

const statusIndicatorClasses = `w-4 h-4 rounded-full ${isActive ? 'bg-status-online animate-pulse' : 'bg-surface-disabled'}`;
const titleClasses = 'text-lg font-semibold text-primary mb-1';
const metaClasses = 'flex items-center gap-4 text-sm text-secondary';
const statValueClasses = 'text-xl font-bold text-primary';
const statLabelClasses = 'text-xs text-secondary';
const footerClasses = 'flex items-center justify-between pt-4 border-t border-border-subtle';
const footerMetaClasses = 'flex items-center gap-4 text-sm text-secondary';
const statusTextClasses = isActive ? 'text-status-online' : 'text-surface-disabled';
const iconButtonClasses = 'text-secondary hover:text-primary transition-colors';
---

<Card>
	<CardBody>
		<div class="flex items-center justify-between mb-4">
			<div class="flex items-center gap-4">
				<div class="flex-shrink-0">
					<div class={statusIndicatorClasses}></div>
				</div>
				<div>
					<Heading as="h3" class={titleClasses}>{title}</Heading>
					<div class={metaClasses}>
						<span>status.peerup.com/{slug}</span>
						<span>•</span>
						<span>{services.length} services</span>
						<span>•</span>
						<span>{uptime}% uptime</span>
					</div>
				</div>
			</div>
			<div class="flex items-center gap-2">
				<Button 
					variant="secondary" 
					size="sm"
					href={`/public/${slug}`}
					target="_blank"
				>
					View
				</Button>
				<Button variant="secondary" size="sm">
					Edit
				</Button>
				<Button variant="secondary" size="sm">
					Settings
				</Button>
			</div>
		</div>
		
		<Grid cols="4" class="mb-4">
			<div class="text-center">
				<div class={statValueClasses}>{visits}</div>
				<div class={statLabelClasses}>Total Visits</div>
			</div>
			<div class="text-center">
				<div class={statValueClasses}>{services.length}</div>
				<div class={statLabelClasses}>Services</div>
			</div>
			<div class="text-center">
				<div class={statValueClasses}>{uptime}%</div>
				<div class={statLabelClasses}>Uptime</div>
			</div>
			<div class="text-center">
				<div class={statValueClasses}>
					{new Date(lastIncident).toLocaleDateString()}
				</div>
				<div class={statLabelClasses}>Last Incident</div>
			</div>
		</Grid>
		
		<!-- Services List -->
		<div class="flex flex-wrap gap-2 mb-4">
			{services.map(service => (
				<Badge variant="secondary" class="bg-accent-secondary text-accent-primary">
					{service}
				</Badge>
			))}
		</div>
		
		<!-- Quick Actions -->
		<div class={footerClasses}>
			<div class={footerMetaClasses}>
				<span>Created: {new Date(created).toLocaleDateString()}</span>
				<span>•</span>
				<span class={statusTextClasses}>
					{isActive ? 'Active' : 'Inactive'}
				</span>
			</div>
			<div class="flex items-center gap-2">
				<button class={iconButtonClasses}>
					<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z"/>
					</svg>
				</button>
				<button class={iconButtonClasses}>
					<svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
					</svg>
				</button>
			</div>
		</div>
	</CardBody>
</Card>
